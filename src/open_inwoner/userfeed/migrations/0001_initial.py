# Generated by Django 3.2.23 on 2024-01-09 10:20

import django.core.serializers.json
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FeedItemData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Feed time"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Information seen or action completed",
                    ),
                ),
                (
                    "auto_expire_at",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Automatically mark as completed after",
                    ),
                ),
                (
                    "action_required",
                    models.BooleanField(default=False, verbose_name="Action required"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("message_simple", "Simple text message"),
                            ("case_status_change", "Case status changed"),
                            ("case_document_added", "Case document added"),
                            ("plan_expiring", "Plan nears deadline"),
                        ],
                        max_length=64,
                        verbose_name="Type",
                    ),
                ),
                (
                    "type_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        verbose_name="Data for type",
                    ),
                ),
                (
                    "ref_uuid",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="External object UUID"
                    ),
                ),
                (
                    "ref_key",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        verbose_name="External object de-duplication",
                    ),
                ),
                ("ref_object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "ref_object_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["display_at"],
            },
        ),
        migrations.AddIndex(
            model_name="feeditemdata",
            index=models.Index(fields=["user", "type"], name="user_type"),
        ),
        migrations.AddConstraint(
            model_name="feeditemdata",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("ref_object_id__isnull", True),
                        ("ref_object_type__isnull", True),
                        ("ref_uuid__isnull", False),
                    ),
                    models.Q(
                        ("ref_object_id__isnull", False),
                        ("ref_object_type__isnull", False),
                        ("ref_uuid__isnull", True),
                    ),
                    models.Q(
                        ("ref_object_id__isnull", True),
                        ("ref_object_type__isnull", True),
                        ("ref_uuid__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="enforce_single_main_ref_field",
            ),
        ),
    ]
